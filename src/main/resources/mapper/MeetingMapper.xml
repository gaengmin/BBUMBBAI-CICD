<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosa.project.repository.mapper.MeetingMapper">

    <resultMap id="MeetingSummaryDtoPageResultMap" type="org.kosa.project.controller.Page">
        <result property="currentPage" column="currentPage"/>
        <result property="pagePerSize" column="pagePerSize"/>
        <result property="totalDataSize" column="totalDataSize"/>
        <collection property="elements" ofType="org.kosa.project.service.dto.MeetingSummaryDto"
                    resultMap="MeetingSummaryDtoResultMap"/>
    </resultMap>

    <resultMap id="MeetingSummaryDtoResultMap" type="org.kosa.project.service.dto.MeetingSummaryDto">
        <result property="meetingId" column="meeting_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="category" column="category"/>
        <result property="subject" column="subject"/>
        <result property="totalMember" column="total_member"/>
        <result property="presentMember" column="present_member"/>
        <result property="fileName" column="file_name"/>
        <result property="meetingStatus" column="status"/>
    </resultMap>

    <!-- UserMeetingDto 매핑 -->
    <resultMap id="UserMeetingDtoResultMap" type="org.kosa.project.service.dto.UserMeetingDto">
        <id property="userMeetingId" column="user_meeting_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="meetingId" column="meeting_id"/>
        <result property="userType" column="user_type"/>
    </resultMap>

    <!-- MeetingDetailDto 매핑 -->
    <resultMap id="MeetingDetailDtoResultMap" type="org.kosa.project.service.dto.MeetingDetailDto">
        <id property="meetingId" column="meeting_id"/>
        <result property="userId" column="user_id"/>
        <result property="regionId" column="region_id"/>
        <result property="category" column="category"/>
        <result property="subject" column="subject"/>
        <result property="context" column="context"/>
        <result property="totalMember" column="total_member"/>
        <result property="presentMember" column="present_member"/>
        <result property="fileName" column="file_name"/>
        <result property="meetingStatus" column="status"/>
        <result property="regDate" column="reg_dt"/>
        <collection property="userMeetingDto" ofType="org.kosa.project.service.dto.UserMeetingDto"
                    resultMap="UserMeetingDtoResultMap"/>
    </resultMap>

    <!--Meeting생성시 save / select / userMeeting테이블까지 저장-->
    <insert id="save" parameterType="org.kosa.project.controller.MeetingRegisterRequest">
        INSERT INTO MEETING (user_id, category, subject, context, total_member, file_name)
        VALUES (#{userId}, #{category}, #{subject}, #{context}, #{totalMember}, #{fileUploadUrl})
    </insert>

    <select id="selectLastInsertId" resultType="long">
        SELECT meeting_id FROM MEETING WHERE user_id = #{userId} ORDER BY meeting_id DESC FETCH FIRST 1 ROWS ONLY
    </select>

    <insert id="userMeetingSave" parameterType="org.kosa.project.service.dto.UserMeetingDto">
        insert into user_meeting (user_id, meeting_id, user_type)
        values (#{userId}, #{meetingId}, #{userType})
    </insert>


    <!-- 특정 meetingId와 userId를 기준으로 user_meeting 데이터 삭제 -->
    <delete id="exitMeeting" parameterType="org.kosa.project.service.dto.UserMeetingDto">
        DELETE FROM user_meeting WHERE meeting_id = #{meetingId} AND user_id = #{userId}
    </delete>

    <update id="meetingUpdatePresentCount" parameterType="long">
        UPDATE meeting
        SET PRESENT_MEMBER = (SELECT COUNT(*) FROM user_meeting WHERE meeting_id = #{meetingId})
        WHERE meeting_id = #{meeting_id}
    </update>

    <select id="meetingList" resultMap="MeetingSummaryDtoPageResultMap">
        select *
        from (select meeting_id,
        user_id,
        category,
        subject,
        file_name,
        total_member,
        present_member,
        status,
        count(*) over() as totalDataSize,
        (select #{pageable.currentPage} from dual) as currentPage,
        (select #{pageable.pagePerSize} from dual) as pagePerSize,
        row_number() over (order by meeting_id desc, reg_dt desc) as rnum
        from meeting
        where meeting_id > 0
        <if test="condition.keyword != null and condition.keyword !=''">
            <if test='condition.searchType == "all"'>
                and subject like '%' || #{condition.keyword} || '%' or context like '%' || #{condition.keyword} || '%'
            </if>
            <if test='condition.searchType == "subject"'>
                and subject like '%' || #{condition.keyword} || '%'
            </if>
            <if test='condition.searchType == "content"'>
                and context like '%' || #{condition.keyword} || '%'
            </if>
        </if>
        )
        where rnum between ((#{pageable.currentPage} - 1) * #{pageable.pagePerSize}) + 1 and #{pageable.currentPage} * #{pageable.pagePerSize}
    </select>


    <select id="getUserMeetingCheck" parameterType="org.kosa.project.service.dto.UserMeetingCheckDto"
            resultType="String">
        select user_type
        from user_meeting
        where user_id = #{userId}
          and meeting_id = #{meetingId}
    </select>

    <!-- 쿼리 -->
    <select id="meetingDetails" parameterType="long" resultMap="MeetingDetailDtoResultMap">
        SELECT m.meeting_id  as meeting_id,
               um.user_id,
               m.region_id,
               m.category,
               m.subject,
               m.context,
               m.total_member,
               m.present_member,
               m.file_name,
               m.status,
               m.reg_dt,
               um.user_meeting_id,
               um.user_id,
               u.user_name,
               um.meeting_id as um_meeting_id,
               um.user_type
        FROM meeting m
                 LEFT JOIN user_meeting um ON m.meeting_id = um.meeting_id
                 LEFT JOIN users u ON um.user_id = u.user_id
        WHERE m.meeting_id = #{meetingId}
        ORDER BY CASE
                     WHEN um.user_type = 'LEADER' THEN 0
                     ELSE 1
                     END,
                 um.user_id
    </select>

</mapper>